"""Initial migration

Revision ID: 856c31163aa7
Revises: 
Create Date: 2023-12-04 13:23:15.323473

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '856c31163aa7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('qlik_space',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('owner_id', sa.String(), nullable=True),
    sa.Column('tenant_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('links', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenant',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('hostnames', sa.String(), nullable=True),
    sa.Column('createdByUser', sa.String(), nullable=True),
    sa.Column('datacenter', sa.String(), nullable=True),
    sa.Column('created', sa.String(), nullable=True),
    sa.Column('lastUpdated', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('autoAssignCreateSharedSpacesRoleToProfessionals', sa.Boolean(), nullable=True),
    sa.Column('autoAssignPrivateAnalyticsContentCreatorRoleToProfessionals', sa.Boolean(), nullable=True),
    sa.Column('autoAssignDataServicesContributorRoleToProfessionals', sa.Boolean(), nullable=True),
    sa.Column('enableAnalyticCreation', sa.Boolean(), nullable=True),
    sa.Column('qlik_cloud_api_key', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('_id', sa.String(), nullable=True),
    sa.Column('fullname', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('qlik_cloud_tenant_url', sa.String(), nullable=True),
    sa.Column('admin_dashboard_api_key', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('admin_dashboard_api_key'),
    sa.UniqueConstraint('email')
    )
    op.create_table('qlik_app',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('owner', sa.String(), nullable=True),
    sa.Column('usage', sa.String(), nullable=True),
    sa.Column('ownerId', sa.String(), nullable=True),
    sa.Column('encrypted', sa.Boolean(), nullable=True),
    sa.Column('published', sa.Boolean(), nullable=True),
    sa.Column('thumbnail', sa.String(), nullable=True),
    sa.Column('createdDate', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('originAppId', sa.String(), nullable=True),
    sa.Column('publishTime', sa.String(), nullable=True),
    sa.Column('dynamicColor', sa.String(), nullable=True),
    sa.Column('modifiedDate', sa.String(), nullable=True),
    sa.Column('lastReloadTime', sa.String(), nullable=True),
    sa.Column('hasSectionAccess', sa.Boolean(), nullable=True),
    sa.Column('isDirectQueryMode', sa.Boolean(), nullable=True),
    sa.Column('tenant_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reload_task',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('appId', sa.String(), nullable=False),
    sa.Column('partial', sa.Boolean(), nullable=True),
    sa.Column('timeZone', sa.String(), nullable=True),
    sa.Column('autoReload', sa.Boolean(), nullable=True),
    sa.Column('recurrence', sa.String(), nullable=True),
    sa.Column('endDateTime', sa.DateTime(), nullable=True),
    sa.Column('startDateTime', sa.DateTime(), nullable=True),
    sa.Column('autoReloadPartial', sa.Boolean(), nullable=True),
    sa.Column('log', sa.Text(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('userId', sa.String(), nullable=False),
    sa.Column('spaceId', sa.String(), nullable=True),
    sa.Column('tenantId', sa.String(), nullable=True),
    sa.Column('fortressId', sa.String(), nullable=True),
    sa.Column('lastExecutionTime', sa.DateTime(), nullable=True),
    sa.Column('nextExecutionTime', sa.DateTime(), nullable=True),
    sa.Column('tenant_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_tenants',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'tenant_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_tenants')
    op.drop_table('reload_task')
    op.drop_table('qlik_app')
    op.drop_table('user')
    op.drop_table('tenant')
    op.drop_table('qlik_space')
    # ### end Alembic commands ###
